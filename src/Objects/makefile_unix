# This makefile starts off with the general directory structure
# of the library of PHCpack, then comes the MPI set up, followed
# by a listing of all the targets, grouped by library.

# The makefile works on RHEL 6.6, with python2.6, openmpi, and GNATGPL 2014.

PYTHON=/usr/include/python2.6
# MPI_HOME=/usr/lib64/openmpi
MPI_HOME=/usr/local/mpi/gcc/openmpi-1.4.3

QD_ROOT=/usr/local/qd-2.3.17
QD_LIB=/usr/local/lib
GQD_HOME=/usr/local/gqd_1_2
SDK_HOME=/usr/local/cuda/sdk

PHCLib=../Lib
PHCAda=../Ada
MPILib=../MPI
PHCgpu=../GPU
BIN=../bin
INCLULIBS=-I$(PHCAda)/System -I$(PHCAda)/System/Unix_Timer \
 -I$(PHCAda)/Math_Lib/Numbers -I$(PHCAda)/Math_Lib/QD \
 -I$(PHCAda)/Math_Lib/Vectors -I$(PHCAda)/Math_Lib/Matrices \
 -I$(PHCAda)/Math_Lib/Divisors -I$(PHCAda)/Math_Lib/Reduction \
 -I$(PHCAda)/Math_Lib/Polynomials -I$(PHCAda)/Math_Lib/Functions \
 -I$(PHCAda)/Math_Lib/Supports -I$(PHCAda)/Math_Lib/Circuits \
 -I$(PHCAda)/Deformations/Solutions -I$(PHCAda)/Deformations/Homotopy \
 -I$(PHCAda)/Deformations/Newton -I$(PHCAda)/Deformations/Curves \
 -I$(PHCAda)/Deformations/End_Games -I$(PHCAda)/Deformations/Sweep \
 -I$(PHCAda)/Deformations/Trackers -I$(PHCAda)/Deformations/Continuation \
 -I$(PHCAda)/Root_Counts/Product -I$(PHCAda)/Root_Counts/Binomials \
 -I$(PHCAda)/Root_Counts/Implift -I$(PHCAda)/Root_Counts/Stalift \
 -I$(PHCAda)/Root_Counts/Dynlift -I$(PHCAda)/Root_Counts/Symmetry \
 -I$(PHCAda)/Root_Counts/MixedVol -I$(PHCAda)/Root_Counts/Puiseux \
 -I$(PHCAda)/Schubert/SAGBI -I$(PHCAda)/Schubert/Pieri \
 -I$(PHCAda)/Schubert/Induction \
 -I$(PHCAda)/Components/Samplers -I$(PHCAda)/Components/Interpolators \
 -I$(PHCAda)/Components/Factorization -I$(PHCAda)/Components/Decomposition \
 -I$(PHCAda)/Components/Solver -I$(PHCAda)/Components/Tropical \
 -I$(PHCAda)/CtoPHC/Funky -I$(PHCAda)/CtoPHC/State -I$(MPILib) \
 -I$(PHCAda)/PHCtoC -I$(PHCAda)/Tasking -I$(PHCAda)/Main
# flags with full optimization
GNATFLAGS=-gnatv -O3 -gnatp -gnatf
# GNATFLAGS=-gnatv -O3 -gnatp -gnatf --GNATBIND="gnatbind -static"
# flags to turn on all warnings and validity checks
# GNATFLAGS=-gnatv -gnatwa -gnatVa
GNATNOPFLAGS=-gnatv -gnatwa -gnatVa
# GNATFLAGS=-gnatv --GNATBIND="gnatbind -static"

COFLAGS = -O2

# the main executable is phc :

phc: lib.a feedback.o get_clock.o get_clocks_per_sec.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) pieri_solver.adb
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) dispatch.adb
	gnatmake -o $(BIN)/phc $(INCLULIBS) $(GNATNOPFLAGS) dispatch.adb \
                 -largs lib.a pieri_solver.o feedback.o \
                        get_clock.o get_clocks_per_sec.o -lm

# some settings for MPI :

CC          = $(MPI_HOME)/bin/mpicc
CLINKER     = $(CC)
CCC         = $(MPI_HOME)/bin/mpiCC
CCLINKER    = $(CCC)

# Test program to see if compiler works, "hello world" :

hello:
	gnatmake $(INCLULIBS) $(GNATFLAGS) hello.adb -o $(BIN)/hello

ada_hello:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ada_hello.adb -o $(BIN)/ada_hello

# Test programs for the System library :

ts_time:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_time.adb -o $(BIN)/ts_time

ts_clock:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_clock.adb -o $(BIN)/ts_clock

ts_stamps:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_stamps.adb -o $(BIN)/ts_stamps

ts_timer:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_timer.adb -o $(BIN)/ts_timer

get_clock.o:
	gcc -c $(PHCAda)/System/Basic_Timer/get_clock.c

get_clocks_per_sec.o:
	gcc -c $(PHCAda)/System/Basic_Timer/get_clocks_per_sec.c

ts_ctimer: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_ctimer $(INCLULIBS) ts_ctimer.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_wintimer: get_clock.o get_clocks_per_sec.o
	gnatmake -o $(BIN)/ts_wintimer $(INCLULIBS) ts_wintimer.adb \
                 -largs get_clock.o get_clocks_per_sec.o

ts_syscall:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_syscall.adb -o $(BIN)/ts_syscall

ts_mach:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mach.adb -o $(BIN)/ts_mach

ts_cmdline:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cmdline.adb -o $(BIN)/ts_cmdline

ts_byemess:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_byemess.adb -o $(BIN)/ts_byemess

ts_commuser:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_commuser.adb \
              -o $(BIN)/ts_commuser

ts_filescan:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_filescan.adb \
              -o $(BIN)/ts_filescan

ts_strsplit:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_strsplit.adb \
              -o $(BIN)/ts_strsplit

ts_striscan:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_striscan.adb \
              -o $(BIN)/ts_striscan

ts_threads:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_threads.adb -o $(BIN)/ts_threads

# Test programs for the library Math_Lib/Numbers :

ts_strnum:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_strnum.adb -o $(BIN)/ts_strnum

ts_printf:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_printf.adb -o $(BIN)/ts_printf

ts_intnum:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intnum.adb -o $(BIN)/ts_intnum

ts_natnum:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_natnum.adb -o $(BIN)/ts_natnum

ts_natdiv:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_natdiv.adb -o $(BIN)/ts_natdiv

ts_longflt:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_longflt.adb -o $(BIN)/ts_longflt

ts_fltnum:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fltnum.adb -o $(BIN)/ts_fltnum

ts_cmpnum:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cmpnum.adb -o $(BIN)/ts_cmpnum

ts_plrexp:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_plrexp.adb -o $(BIN)/ts_plrexp

ts_random:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_random.adb -o $(BIN)/ts_random

ts_extran:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_extran.adb -o $(BIN)/ts_extran

ts_matfun:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_matfun.adb \
                 -o $(BIN)/ts_matfun -largs -lm

ts_intval:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intval.adb -o $(BIN)/ts_intval

ts_mpcst:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mpcst.adb -o $(BIN)/ts_mpcst

ts_numbio:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_numbio.adb -o $(BIN)/ts_numbio

# Test programs for the Math_Lib/QD library :

ts_dbldbl:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_dbldbl.adb -o $(BIN)/ts_dbldbl

ts_qddbl:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qddbl.adb -o $(BIN)/ts_qddbl

ts_ddcmplx:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddcmplx.adb -o $(BIN)/ts_ddcmplx

ts_qdcmplx:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdcmplx.adb -o $(BIN)/ts_qdcmplx

ts_mpddcv:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mpddcv.adb -o $(BIN)/ts_mpddcv

ts_mpqdcv:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mpqdcv.adb -o $(BIN)/ts_mpqdcv

ts_ddfun:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddfun.adb -o $(BIN)/ts_ddfun

ts_qdfun:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdfun.adb -o $(BIN)/ts_qdfun

ts_cmpexp:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cmpexp.adb -o $(BIN)/ts_cmpexp

# Test programs for Math_Lib/Vectors :

ts_natvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_natvec.adb -o $(BIN)/ts_natvec

ts_intvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intvec.adb -o $(BIN)/ts_intvec

ts_fltvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fltvec.adb -o $(BIN)/ts_fltvec

ts_cmpvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cmpvec.adb -o $(BIN)/ts_cmpvec

ts_nesvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_nesvec.adb -o $(BIN)/ts_nesvec

ts_ddvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddvec.adb -o $(BIN)/ts_ddvec

ts_qdvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdvec.adb -o $(BIN)/ts_qdvec

ts_strvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_strvec.adb -o $(BIN)/ts_strvec

# Test programs for Math_Lib/Matrices :

ts_natmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_natmat.adb -o $(BIN)/ts_natmat

ts_intmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intmat.adb -o $(BIN)/ts_intmat

ts_fltmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fltmat.adb -o $(BIN)/ts_fltmat

ts_fltdls:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fltdls.adb -o $(BIN)/ts_fltdls

ts_cmpmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cmpmat.adb -o $(BIN)/ts_cmpmat

ts_ddmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddmat.adb -o $(BIN)/ts_ddmat

ts_qdmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdmat.adb -o $(BIN)/ts_qdmat

# Test programs for Math_Lib/Divisors :

ts_gcd:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_gcd.adb -o $(BIN)/ts_gcd

ts_smith:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_smith.adb -o $(BIN)/ts_smith

ts_intinv:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intinv.adb -o $(BIN)/ts_intinv

ts_circuit:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_circuit.adb \
              -o $(BIN)/ts_circuit

# Test programs for Math_Lib/Reduction :

ts_fltlu:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fltlu.adb -o $(BIN)/ts_fltlu

ts_cmplu:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cmplu.adb -o $(BIN)/ts_cmplu

ts_ddlu:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddlu.adb -o $(BIN)/ts_ddlu

ts_qdlu:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdlu.adb -o $(BIN)/ts_qdlu

ts_qrd:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qrd.adb -o $(BIN)/ts_qrd

ts_svd:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_svd.adb -o $(BIN)/ts_svd

ts_rowred:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_rowred.adb -o $(BIN)/ts_rowred

ts_eigval:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_eigval.adb -o $(BIN)/ts_eigval

ts_mgs:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mgs.adb -o $(BIN)/ts_mgs

ts_mgsrnk:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mgsrnk.adb -o $(BIN)/ts_mgsrnk

ts_backsubs:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_backsubs.adb \
              -o $(BIN)/ts_backsubs

ts_perflu:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_perflu.adb -o $(BIN)/ts_perflu

ts_vvlu:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_vvlu.adb -o $(BIN)/ts_vvlu

ts_vmplu:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_vmplu.adb -o $(BIN)/ts_vmplu

# Test programs for Math_Lib/Polynomials :

ts_poly:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_poly.adb -o $(BIN)/ts_poly

ts_laurpoly:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_laurpoly.adb \
	         -o $(BIN)/ts_laurpoly

ts_randpoly:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_randpoly.adb \
	         -o $(BIN)/ts_randpoly

ts_laurlist:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_laurlist.adb \
	         -o $(BIN)/ts_laurlist

ts_rpol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_rpol.adb -o $(BIN)/ts_rpol

ts_ddpol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddpol.adb -o $(BIN)/ts_ddpol

ts_qdpol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdpol.adb -o $(BIN)/ts_qdpol

ts_polmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_polmat.adb -o $(BIN)/ts_polmat

ts_jaco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_jaco.adb -o $(BIN)/ts_jaco

ts_parse:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_parse.adb -o $(BIN)/ts_parse

ts_subs:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_subs.adb -o $(BIN)/ts_subs

ts_tabform:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_tabform.adb -o $(BIN)/ts_tabform

ts_str2pol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_str2pol -o $(BIN)/ts_str2pol

ts_termlist:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_termlist \
              -o $(BIN)/ts_termlist

# Test programs for Math_Lib/Functions :

ts_evaline:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_evaline.adb -o $(BIN)/ts_evaline

ts_evalpoly:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_evalpoly.adb \
                -o $(BIN)/ts_evalpoly

ts_evalform:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_evalform.adb \
                -o $(BIN)/ts_evalform

ts_lineva:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_lineva.adb -o $(BIN)/ts_lineva

ts_polyflat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_polyflat.adb \
                -o $(BIN)/ts_polyflat

ts_perfeval:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_perfeval.adb \
                -o $(BIN)/ts_perfeval

ts_expvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_expvec.adb -o $(BIN)/ts_expvec

# Test programs for Math_Lib/Circuits :

ts_cffsup:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cffsup.adb -o $(BIN)/ts_cffsup

ts_speel:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_speel.adb -o $(BIN)/ts_speel

ts_speelsys:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_speelsys.adb \
	      -o $(BIN)/ts_speelsys

ts_cycfun:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cycfun.adb -o $(BIN)/ts_cycfun

ts_vmpeval:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_vmpeval.adb \
              -o $(BIN)/ts_vmpeval

ts_vmpdiff:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_vmpdiff.adb \
              -o $(BIN)/ts_vmpdiff

ts_gradcirc:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_gradcirc.adb \
              -o $(BIN)/ts_gradcirc

# Test programs for Math_Lib/Supports :

ts_basex:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_basex.adb -o $(BIN)/ts_basex

ts_feasi:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_feasi.adb -o $(BIN)/ts_feasi

ts_enurs:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_enurs.adb -o $(BIN)/ts_enurs

ts_diclp:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_diclp.adb -o $(BIN)/ts_diclp

ts_givrot:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_givrot.adb -o $(BIN)/ts_givrot

ts_lstvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_lstvec.adb -o $(BIN)/ts_lstvec

ts_fvector:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fvector.adb -o $(BIN)/ts_fvector

ts_giftwrap:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_giftwrap.adb \
              -o $(BIN)/ts_giftwrap

# Test programs for the Deformations/Solutions library :

ts_solfilt:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_solfilt.adb -o $(BIN)/ts_solfilt

ts_sols:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_sols.adb -o $(BIN)/ts_sols

ts_ddsols:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddsols.adb -o $(BIN)/ts_ddsols

ts_qdsols:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdsols.adb -o $(BIN)/ts_qdsols

ts_solar:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_solar.adb -o $(BIN)/ts_solar

ts_dicsols_io:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_dicsols_io.adb \
              -o $(BIN)/ts_dicsols_io

ts_mapsols_io:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mapsols_io.adb \
              -o $(BIN)/ts_mapsols_io

ts_grepsols:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_grepsols.adb \
              -o $(BIN)/ts_grepsols

ts_selsol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_selsol.adb -o $(BIN)/ts_selsol

ts_solstr:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_solstr.adb -o $(BIN)/ts_solstr

ts_quad:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_quad.adb -o $(BIN)/ts_quad

ts_contab:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_contab.adb -o $(BIN)/ts_contab

ts_soldrop:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_soldrop.adb -o $(BIN)/ts_soldrop

ts_ptlists:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ptlists.adb -o $(BIN)/ts_ptlists

# Test programs for the Deformations/Homotopy library :

ts_drivscal:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivscal.adb \
              -o $(BIN)/ts_drivscal

ts_scal:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_scal.adb -o $(BIN)/ts_scal

ts_drivred:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivred.adb \
              -o $(BIN)/ts_drivred

ts_homotopy:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_homotopy.adb \
              -o $(BIN)/ts_homotopy

ts_homline:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_homline.adb -o $(BIN)/ts_homline

ts_linsol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_linsol.adb -o $(BIN)/ts_linsol

ts_qdhom:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdhom.adb -o $(BIN)/ts_qdhom

ts_poldrop:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_poldrop.adb -o $(BIN)/ts_poldrop

ts_evalhomt:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_evalhomt.adb \
              -o $(BIN)/ts_evalhomt

ts_vmphom:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_vmphom.adb -o $(BIN)/ts_vmphom

# Test programs for the Deformations/Newton library :

ts_mreseva:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mreseva.adb -o $(BIN)/ts_mreseva

ts_rootrefi:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_rootrefi.adb \
              -o $(BIN)/ts_rootrefi

ts_newton:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_newton.adb -o $(BIN)/ts_newton

ts_realnewt:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_realnewt.adb \
              -o $(BIN)/ts_realnewt

ts_numdif:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_numdif.adb -o $(BIN)/ts_numdif

ts_jactrees:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_jactrees.adb \
              -o $(BIN)/ts_jactrees

ts_deftrees:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_deftrees.adb \
              -o $(BIN)/ts_deftrees

ts_deflate:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_deflate.adb -o $(BIN)/ts_deflate

ts_straight:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_straight.adb \
              -o $(BIN)/ts_straight

ts_stair:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_stair.adb -o $(BIN)/ts_stair

ts_defmat:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_defmat.adb -o $(BIN)/ts_defmat

ts_multip:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_multip.adb -o $(BIN)/ts_multip

ts_muldef:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_muldef.adb -o $(BIN)/ts_muldef

ts_deflop:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_deflop.adb -o $(BIN)/ts_deflop

ts_ddnewt:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddnewt.adb -o $(BIN)/ts_ddnewt

ts_qdnewt:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_qdnewt.adb -o $(BIN)/ts_qdnewt

ts_vmpnewt:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_vmpnewt.adb \
              -o $(BIN)/ts_vmpnewt

# Test programs for the Deformations/Curves library :

ts_durker:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_durker.adb -o $(BIN)/ts_durker

ts_extrapol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_extrapol.adb \
              -o $(BIN)/ts_extrapol

ts_extrapts:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_extrapts.adb \
              -o $(BIN)/ts_extrapts

# Test programs for the Deformations/End_Games library :

ts_vlprs:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_vlprs.adb -o $(BIN)/ts_vlprs

postpoco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) postpoco.adb -o $(BIN)/postpoco

valipoco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) valipoco.adb -o $(BIN)/valipoco

# Test programs for the Deformations/Sweep library :

ts_parcon:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_parcon.adb -o $(BIN)/ts_parcon

ts_realcont:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_realcont.adb \
              -o $(BIN)/ts_realcont

# Test programs for the Deformations/Trackers library :

ts_preco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_preco.adb -o $(BIN)/ts_preco

ts_correct:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_correct.adb \
              -o $(BIN)/ts_correct

ts_path:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_path.adb -o $(BIN)/ts_path

ts_track:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_track.adb -o $(BIN)/ts_track

ts_nxtsol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_nxtsol.adb -o $(BIN)/ts_nxtsol

# Test programs for the Deformations/Continuation library :

ts_pactun:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_pactun.adb -o $(BIN)/ts_pactun

ts_autotune:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_autotune.adb \
              -o $(BIN)/ts_autotune

ts_poco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_poco.adb -o $(BIN)/ts_poco

ts_bbpoco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_bbpoco.adb \
              -o $(BIN)/ts_bbpoco

ts_exp:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_exp.adb -o $(BIN)/ts_exp

mypoco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) mypoco.adb -o $(BIN)/mypoco

# Test programs for the Root_Counts/Product homotopies library :

ts_startsys:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_startsys.adb \
              -o $(BIN)/ts_startsys

ts_permanent:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_permanent.adb \
              -o $(BIN)/ts_permanent

ts_prodsys:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_prodsys.adb -o $(BIN)/ts_prodsys

ts_drivmhom:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivmhom.adb \
              -o $(BIN)/ts_drivmhom

ts_drivmuho:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivmuho.adb \
              -o $(BIN)/ts_drivmuho

ts_drivss:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivss.adb -o $(BIN)/ts_drivss

ts_strset:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_strset.adb -o $(BIN)/ts_strset

ts_strpart:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_strpart.adb -o $(BIN)/ts_strpart

ts_permstar:
	gnatmake $(INCLULIBS) $(GNATOPTFLAGS) ts_permstar.adb \
              -o $(BIN)/ts_permstar

# Test programs in the Root_Counts/Binomials library :

ts_binsys:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_binsys.adb -o $(BIN)/ts_binsys

ts_kernel:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_kernel.adb -o $(BIN)/ts_kernel

ts_binset:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_binset.adb -o $(BIN)/ts_binset

ts_incols:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_incols.adb -o $(BIN)/ts_incols

ts_monmap:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_monmap.adb -o $(BIN)/ts_monmap

ts_binsol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_binsol.adb -o $(BIN)/ts_binsol

ts_affpol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_affpol.adb -o $(BIN)/ts_affpol

ts_simsys:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_simsys.adb -o $(BIN)/ts_simsys

ts_simposol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_simposol.adb \
                 -o $(BIN)/ts_simposol

ts_powtrans:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_powtrans.adb \
                 -o $(BIN)/ts_powtrans

ts_binpser:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_binpser.adb \
                 -o $(BIN)/ts_binpser

ts_cspsol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cspsol.adb -o $(BIN)/ts_cspsol

ts_unimod:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_unimod.adb -o $(BIN)/ts_unimod

ts_mapsubs:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mapsubs.adb -o $(BIN)/ts_mapsubs

# Test programs for the Root_Counts/Implift library :

ts_supports:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_supports.adb \
                 -o $(BIN)/ts_supports

ts_supspan:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_supspan.adb \
                 -o $(BIN)/ts_supspan

ts_transfo:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_transfo.adb \
                 -o $(BIN)/ts_transfo

ts_drivpts:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivpts.adb \
                 -o $(BIN)/ts_drivpts

ts_impvol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_impvol.adb -o $(BIN)/ts_impvol

ts_drivimpl:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivimpl.adb \
                 -o $(BIN)/ts_drivimpl

# Test programs for the Root_Counts/Stalift library :

ts_rndcff:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_rndcff.adb -o $(BIN)/ts_rndcff

ts_supsub:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_supsub.adb -o $(BIN)/ts_supsub

ts_conint:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_conint.adb -o $(BIN)/ts_conint

ts_mixture:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mixture.adb -o $(BIN)/ts_mixture

ts_mixvol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mixvol.adb -o $(BIN)/ts_mixvol

ts_mixlab:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mixlab.adb -o $(BIN)/ts_mixlab

ts_jpmix:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_jpmix.adb -o $(BIN)/ts_jpmix

ts_drivcrit:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivcrit.adb \
                 -o $(BIN)/ts_drivcrit

ts_drivstal:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivstal.adb \
                 -o $(BIN)/ts_drivstal

ts_mvasta:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mvasta.adb -o $(BIN)/ts_mvasta

ts_exptrack:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_exptrack.adb \
                 -o $(BIN)/ts_exptrack

ts_stable:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_stable.adb -o $(BIN)/ts_stable

ts_balance:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_balance.adb \
              -o $(BIN)/ts_balance

# Test programs for the Root_Counts/Dynlift library :

ts_dyntri:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_dyntri.adb -o $(BIN)/ts_dyntri

ts_drivmink:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivmink.adb \
                 -o $(BIN)/ts_drivmink

ts_drivdynl:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivdynl.adb \
                 -o $(BIN)/ts_drivdynl

# Test programs for the Root_Counts/Symmetry library :

ts_group:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_group.adb -o $(BIN)/ts_group

ts_equpol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_equpol.adb -o $(BIN)/ts_equpol

ts_drivsss:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivsss.adb -o $(BIN)/ts_drivsss

# Test programs for the Root_Counts/MixedVol library :

convsub:
	gnatmake $(INCLULIBS) $(GNATFLAGS) convsub.adb -o $(BIN)/convsub

ts_mv2c:
	gcc -c $(PHCAda)/Root_Counts/MixedVol/mv.c
	gcc -c $(PHCAda)/Root_Counts/MixedVol/cell_stack.c
	gcc -c $(PHCAda)/Root_Counts/MixedVol/form_lp.c 
	gcc -c $(PHCAda)/Root_Counts/MixedVol/index_tree_lp.c 
	gcc -c $(PHCAda)/Root_Counts/MixedVol/zero_index_tree.c
	gcc -c $(PHCAda)/Root_Counts/MixedVol/one_level_lp.c
	gcc -c $(PHCAda)/Root_Counts/MixedVol/mixed_volume.c
	gcc -c $(PHCAda)/Root_Counts/MixedVol/relation_table.c
	gcc -c $(PHCAda)/Root_Counts/MixedVol/prepare_for_mv.c
	gnatmake -o $(BIN)/ts_mv2c $(INCLULIBS) $(GNATOPTFLAGS) ts_mv2c.adb \
                 -largs mv.o cell_stack.o form_lp.o index_tree_lp.o \
                        zero_index_tree.o one_level_lp.o mixed_volume.o \
                        relation_table.o prepare_for_mv.o -lm

ts_mv:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mv.adb -o $(BIN)/ts_mv

ts_mva:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mva.adb -o $(BIN)/ts_mva

# Test programs for the Root_Counts/Puiseux library :

ts_degcurve:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_degcurve.adb \
              -o $(BIN)/ts_degcurve

# Test programs for SAGBI library in numerical Schubert calculus :

ts_subsets:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_subsets.adb -o $(BIN)/ts_subsets

ts_brackets:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_brackets.adb \
              -o $(BIN)/ts_brackets

ts_brackmons:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_brackmons.adb \
              -o $(BIN)/ts_brackmons

ts_brackpols:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_brackpols.adb \
              -o $(BIN)/ts_brackpols

ts_straighten:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_straighten.adb \
              -o $(BIN)/ts_straighten

ts_expand:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_expand.adb -o $(BIN)/ts_expand

ts_local:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_local.adb -o $(BIN)/ts_local

ts_mathom:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mathom.adb -o $(BIN)/ts_mathom

ts_cheby:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cheby.adb -o $(BIN)/ts_cheby

ts_shapiro:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_shapiro.adb \
              -o $(BIN)/ts_shapiro

ts_eremenko:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_eremenko.adb \
              -o $(BIN)/ts_eremenko

ts_detrock:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_detrock.adb -o $(BIN)/ts_detrock

ts_sagbi:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_sagbi.adb -o $(BIN)/ts_sagbi

ts_topos:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_topos.adb -o $(BIN)/ts_topos

# Test programs for Pieri library in numerical Schubert calculus :

ts_org_pieri:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_org_pieri.adb \
              -o $(BIN)/ts_org_pieri

ts_canocurv:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_canocurv.adb \
              -o $(BIN)/ts_canocurv

ts_matinv:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_matinv.adb -o $(BIN)/ts_matinv

ts_pieri:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_pieri.adb -o $(BIN)/ts_pieri

ts_posets:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_posets.adb -o $(BIN)/ts_posets

ts_detsys:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_detsys.adb -o $(BIN)/ts_detsys

ts_defpos:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_defpos.adb -o $(BIN)/ts_defpos

ts_piroco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_piroco.adb -o $(BIN)/ts_piroco

# Test programs for Induction library in numerical Schubert calculus :

ts_checkers:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_checkers.adb \
              -o $(BIN)/ts_checkers

ts_induce:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_induce.adb -o $(BIN)/ts_induce

ts_flagcond:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_flagcond.adb \
              -o $(BIN)/ts_flagcond

ts_lrhom:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_lrhom.adb -o $(BIN)/ts_lrhom

# Test programs for the evaluators :

ts_cyclic7:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_cyclic7.adb
	gnatbl -o $(BIN)/ts_cyclic7 ts_cyclic7.ali

solve_cyclic7:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) solve_cyclic7.adb
	gnatbl -o $(BIN)/solve_cyclic7 solve_cyclic7.ali

# Test programs for the Components/Samplers library :

ts_roots:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_roots.adb -o $(BIN)/ts_roots

ts_hypsam:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_hypsam.adb -o $(BIN)/ts_hypsam

ts_hyprts:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_hyprts.adb -o $(BIN)/ts_hyprts

ts_hyppts:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_hyppts.adb -o $(BIN)/ts_hyppts

ts_unisam:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_unisam.adb -o $(BIN)/ts_unisam

ts_planes:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_planes.adb -o $(BIN)/ts_planes

ts_flag:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_flag.adb -o $(BIN)/ts_flag

ts_coords:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_coords.adb -o $(BIN)/ts_coords

ts_itrack:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_itrack.adb -o $(BIN)/ts_itrack

ts_ispan:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ispan.adb -o $(BIN)/ts_ispan

ts_inewt:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_inewt.adb -o $(BIN)/ts_inewt

ts_iddnewt:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_iddnewt.adb \
              -o $(BIN)/ts_iddnewt

ts_iwset:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_iwset.adb -o $(BIN)/ts_iwset

ts_ilocal:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ilocal.adb -o $(BIN)/ts_ilocal

ts_sampar:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_sampar.adb -o $(BIN)/ts_sampar

ts_sample:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_sample.adb -o $(BIN)/ts_sample

ts_mulsam:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mulsam.adb -o $(BIN)/ts_mulsam

ts_mulhom:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mulhom.adb -o $(BIN)/ts_mulhom

ts_endgm:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_endgm.adb -o $(BIN)/ts_endgm

ts_locdim:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_locdim.adb -o $(BIN)/ts_locdim

ts_ddqdsam:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ddqdsam.adb -o $(BIN)/ts_ddqdsam

# Test programs for the Components/Interpolators libary :

ts_stpolin:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_stpolin.adb \
              -o $(BIN)/ts_stpolin

ts_mupolin:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mupolin.adb \
              -o $(BIN)/ts_mupolin

ts_adpolin:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_adpolin.adb \
              -o $(BIN)/ts_adpolin

ts_project:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_project.adb -o $(BIN)/ts_project

ts_span:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_span.adb -o $(BIN)/ts_span

ts_filter:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_filter.adb -o $(BIN)/ts_filter

ts_nbterms:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_nbterms.adb -o $(BIN)/ts_nbterms

ts_divdif:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_divdif.adb -o $(BIN)/ts_divdif

ts_dvdexp:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_dvdexp.adb -o $(BIN)/ts_dvdexp

ts_newint:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_newint.adb -o $(BIN)/ts_newint

ts_powtrc:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_powtrc.adb -o $(BIN)/ts_powtrc

ts_traces:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_traces.adb -o $(BIN)/ts_traces

ts_trapol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_trapol.adb -o $(BIN)/ts_trapol

ts_rewrite:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_rewrite.adb -o $(BIN)/ts_rewrite

ts_elim:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_elim.adb -o $(BIN)/ts_elim

ts_embed:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_embed.adb -o $(BIN)/ts_embed

ts_square:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_square.adb -o $(BIN)/ts_square

ts_squemb:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_squemb.adb -o $(BIN)/ts_squemb

# Test programs in the Components/Factorization library :

ts_rwpoly:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_rwpoly.adb -o $(BIN)/ts_rwpoly

ts_irco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_irco.adb -o $(BIN)/ts_irco

ts_combfac:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_combfac.adb -o $(BIN)/ts_combfac

ts_newfac:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_newfac.adb -o $(BIN)/ts_newfac

ts_factor:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_factor.adb -o $(BIN)/ts_factor

ts_ifactor:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ifactor.adb -o $(BIN)/ts_ifactor

ts_hypfac:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_hypfac.adb -o $(BIN)/ts_hypfac

ts_monfac:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_monfac.adb -o $(BIN)/ts_monfac

# Test programs in the Components/Decomposition library :

ts_irdeco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_irdeco.adb -o $(BIN)/ts_irdeco

ts_breakup:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_breakup.adb -o $(BIN)/ts_breakup

ts_cascade:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cascade.adb -o $(BIN)/ts_cascade

ts_intcas:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intcas.adb -o $(BIN)/ts_intcas

ts_intdia:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intdia.adb -o $(BIN)/ts_intdia

ts_reorder:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_reorder.adb -o $(BIN)/ts_reorder

ts_filfac:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_filfac.adb -o $(BIN)/ts_filfac

ts_squeeze:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_squeeze.adb -o $(BIN)/ts_squeeze

ts_dimred:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_dimred.adb -o $(BIN)/ts_dimred

ts_mbthom:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mbthom.adb -o $(BIN)/ts_mbthom

ts_diahom:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_diahom.adb -o $(BIN)/ts_diahom

ts_fillit:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_fillit.adb -o $(BIN)/ts_fillit

ts_jmpdia:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_jmpdia.adb -o $(BIN)/ts_jmpdia

# Test programs in the Components/Solver library :

ts_hypwit:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_hypwit.adb \
              -o $(BIN)/ts_hypwit

ts_solver:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_solver.adb \
              -o $(BIN)/ts_solver

ts_rdisol:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_rdisol.adb \
                 -o $(BIN)/ts_rdisol

testnine:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) testnine.adb
	gnatbl -o $(BIN)/testnine testnine.ali

# Test programs in the Components/Tropical library :

ts_tropawit:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_tropawit.adb \
                 -o $(BIN)/ts_tropawit

ts_tropisms:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_tropisms.adb \
                 -o $(BIN)/ts_tropisms

ts_inform:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_inform.adb -o $(BIN)/ts_inform

ts_comfac:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_comfac.adb -o $(BIN)/ts_comfac

ts_intorto:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_intorto.adb \
                 -o $(BIN)/ts_intorto

ts_convhull:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_convhull.adb \
                 -o $(BIN)/ts_convhull

ts_ptlstr:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_ptlstr.adb \
                 -o $(BIN)/ts_ptlstr

ts_pretrop:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_pretrop.adb \
                 -o $(BIN)/ts_pretrop

# test programs for CtoPHC/Funky directory :

ts_arrays:
	gnatmake -o $(BIN)/ts_arrays $(INCLULIBS) $(GNATFLAGS) ts_arrays.adb

pass_poly:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) print_poly.adb
	gcc -c $(PHCAda)/CtoPHC/Funky/pass_poly.c
	gnatbind -n print_poly
	gnatlink -C print_poly pass_poly.o -o $(BIN)/pass_poly

ts_cosup:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cosup.adb -o $(BIN)/ts_cosup 

ts_cosupoly:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) cosupoly.adb
	gcc -c $(PHCAda)/CtoPHC/Funky/ts_cosupoly.c
	gnatbind -n cosupoly
	gnatlink -C cosupoly ts_cosupoly.o -o $(BIN)/ts_cosupoly

ts_cosupsys:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) cosupsys.adb
	gcc -c $(PHCAda)/CtoPHC/Funky/ts_cosupsys.c
	gnatbind -n cosupsys
	gnatlink -C cosupsys ts_cosupsys.o -o $(BIN)/ts_cosupsys

cosupoly_to_c.o:
	gcc -c $(PHCAda)/CtoPHC/Funky/cosupoly_to_c.c

cosupsys_to_c.o:
	gcc -c $(PHCAda)/CtoPHC/Funky/cosupsys_to_c.c

ts_cosuptoc: cosupoly_to_c.o cosupsys_to_c.o
	gnatmake -o $(BIN)/ts_cosuptoc $(INCLULIBS) $(GNATFLAGS) \
                  ts_cosuptoc.adb -largs cosupoly_to_c.o cosupsys_to_c.o

ts_getsys:
	gcc -c $(PHCAda)/CtoPHC/Funky/getsys2.c
	gcc -c $(PHCAda)/CtoPHC/Funky/ts_getsys.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) getsys1.adb
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) getsys3.adb
	gnatbind -n getsys1 getsys3
	gnatlink -C getsys3 ts_getsys.o getsys2.o -o $(BIN)/ts_getsys

ts_phc_sys_rw:
	gcc -c $(PHCAda)/CtoPHC/Funky/ts_phc_sys_rw.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) phc_sys_rw.adb
	gnatbind -n phc_sys_rw
	gnatlink -C phc_sys_rw ts_phc_sys_rw.o -o $(BIN)/ts_phc_sys_rw

ts_phc_sol_rw:
	gcc -c $(PHCAda)/CtoPHC/Funky/ts_phc_sol_rw.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) phc_sol_rw.adb
	gnatbind -n phc_sol_rw
	gnatlink -C phc_sol_rw ts_phc_sol_rw.o -o $(BIN)/ts_phc_sol_rw

ts_cpm:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cpm.adb -o $(BIN)/ts_cpm

ts_pieri_count:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) pieri_count.adb
	gcc -c $(PHCAda)/CtoPHC/Funky/ts_pieri_count.c
	gnatbind -n pieri_count
	gnatlink -C pieri_count ts_pieri_count.o -o $(BIN)/ts_pieri_count

ts_pieri_solver:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) pieri_solver.adb
	gcc -c $(PHCAda)/CtoPHC/Funky/ts_pieri_solver.c
	gcc -c $(PHCAda)/CtoPHC/Funky/pieri_sols.c
	gnatbind -n pieri_solver
	gnatlink -C pieri_solver ts_pieri_solver.o pieri_sols.o \
                 -o $(BIN)/ts_pieri_solver -lm

ts_phc_solver:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) phc_solver.adb
	gcc -c $(PHCAda)/CtoPHC/Funky/ts_phc_solver.c
	gcc -c $(PHCAda)/CtoPHC/Funky/phc_sols.c
	gnatbind -n phc_solver
	gnatlink -C phc_solver ts_phc_solver.o phc_sols.o \
                 -o $(BIN)/ts_phc_solver

ts_csols:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_csols.adb -o $(BIN)/ts_csols

# test programs for the CtoPHC/State directory :

ts_filman:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_solcon.adb -o $(BIN)/ts_filman

ts_solcon:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_solcon.adb -o $(BIN)/ts_solcon

ts_solpool:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_solpool.adb -o $(BIN)/ts_solpool

ts_use_solcon:
	gcc -c $(PHCAda)/CtoPHC/State/ts_use_solcon.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_solcon.adb
	gnatbind -n use_solcon
	gnatlink -C use_solcon ts_use_solcon.o -o $(BIN)/ts_use_solcon

ts_use_solpool:
	gcc -c $(PHCAda)/CtoPHC/State/ts_use_solpool.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_solpool.adb
	gnatbind -n use_solpool
	gnatlink -C use_solpool ts_use_solpool.o -o $(BIN)/ts_use_solpool

ts_syscon:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_syscon.adb -o $(BIN)/ts_syscon

ts_syspool:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_syspool.adb -o $(BIN)/ts_syspool

ts_use_syscon:
	gcc -c $(PHCAda)/CtoPHC/State/ts_use_syscon.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_syscon.adb
	gnatbind -n use_syscon
	gnatlink -C use_syscon ts_use_syscon.o -o $(BIN)/ts_use_syscon

ts_use_syspool:
	gcc -c $(PHCAda)/CtoPHC/State/ts_use_syspool.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_syspool.adb
	gnatbind -n use_syspool
	gnatlink -C use_syspool ts_use_syspool.o -o $(BIN)/ts_use_syspool

ts_c2phc:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) c_to_phcpack.adb
	gcc -c $(PHCAda)/CtoPHC/State/ts_c2phc.c
	gnatbind -n c_to_phcpack
	gnatlink -C c_to_phcpack ts_c2phc.o -o $(BIN)/ts_c2phc

ts_c2str:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCAda)/CtoPHC/State/ts_c2str.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc ts_c2str.o -o $(BIN)/ts_c2str

ts_use_c2phc:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCAda)/CtoPHC/State/ts_use_c2phc.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc ts_use_c2phc.o -o $(BIN)/ts_use_c2phc

ts_pirhom:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_pirhom.adb -o $(BIN)/ts_pirhom

ts_use_c2pieri:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2pieri.adb
	gcc -c $(PHCAda)/CtoPHC/State/ts_use_c2pieri.c
	gnatbind -n use_c2pieri
	gnatlink -C use_c2pieri ts_use_c2pieri.o -o $(BIN)/ts_use_c2pieri

ts_use_c2fac:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2fac.adb
	gcc -c $(PHCAda)/CtoPHC/State/ts_use_c2fac.c
	gnatbind -n use_c2fac
	gnatlink -C use_c2fac ts_use_c2fac.o -o $(BIN)/ts_use_c2fac

ts_celcon:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_celcon.adb -o $(BIN)/ts_celcon

ts_use_celcon:
	gcc -c $(PHCAda)/CtoPHC/State/ts_use_celcon.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_celcon.adb
	gnatbind -n use_celcon
	gnatlink -C use_celcon ts_use_celcon.o -o $(BIN)/ts_use_celcon

ts_unisolve:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_unisolve.adb \
              -o $(BIN)/ts_unisolve

ts_use_giftwrap:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_use_giftwrap.adb \
              -o $(BIN)/ts_use_giftwrap

ts_giftwcon:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_giftwcon.adb \
              -o $(BIN)/ts_giftwcon

# files in feedback :

lib.a:$(PHCAda)/../Feedback/*.c $(PHCAda)/../Feedback/*.h
	gcc -c $(PHCAda)/../Feedback/*.c
	ar ruv lib.a    dc_interpolation.o  dcmplx.o       poly_matrix.o\
       append_dcmatrix.o    dc_inverse.o        pieri_sols.o   poly_smith.o\
       c2ada_dc_matrix.o    dc_matrix.o         poly_dcmplx.o  realization.o\
       c2ada_poly_matrix.o  dc_roots.o          poly_gcd.o     ts_feedback.o\
       poly_hermite.o       append_polymatrix.o timer.o
	ranlib lib.a

ts_feedback: lib.a get_clock.o get_clocks_per_sec.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) pieri_solver.adb
	gnatbind -n pieri_solver
	gnatlink -C pieri_solver lib.a \
                 -o $(BIN)/ts_feedback  -lm \
                 get_clock.o get_clocks_per_sec.o

feedback.o:
	gcc -c $(PHCAda)/../Feedback/feedback.c

# Test program to test the C interface to GPU acceleration :

ts_cpu2norm_d:
	gcc -c $(PHCAda)/PHCtoC/cpu2norm_d_in_c.c -o cpu2norm_d_in_c.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cpu2norm_d.adb \
              -o $(BIN)/ts_cpu2norm_d -largs cpu2norm_d_in_c.o -lm

ts_cpu2norm_dd:
	gcc -I $(PHCAda)/Math_Lib/QD \
            -c $(PHCAda)/Math_Lib/QD/double_double.c -o double_double.o
	gcc -I $(PHCAda)/Math_Lib/QD \
            -c $(PHCAda)/PHCtoC/cpu2norm_dd_in_c.c \
            -o cpu2norm_dd_in_c.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cpu2norm_dd.adb \
              -o $(BIN)/ts_cpu2norm_dd \
              -largs double_double.o cpu2norm_dd_in_c.o -lm

ts_cpu2norm_qd:
	gcc -I $(PHCAda)/Math_Lib/QD \
            -c $(PHCAda)/Math_Lib/QD/double_double.c -o double_double.o
	gcc -I $(PHCAda)/Math_Lib/QD \
            -c $(PHCAda)/Math_Lib/QD/quad_double.c -o quad_double.o
	gcc -I $(PHCAda)/Math_Lib/QD \
            -c $(PHCAda)/PHCtoC/cpu2norm_qd_in_c.c \
            -o cpu2norm_qd_in_c.o
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_cpu2norm_qd.adb \
              -o $(BIN)/ts_cpu2norm_qd \
              -largs double_double.o quad_double.o cpu2norm_qd_in_c.o -lm

ts_gpu2norm_d_in_c:
	@-echo ">>> compiling kernels ..."
	nvcc --define-macro precision=d -I$(PHCgpu)/DefineTypesD \
             -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
             -I/usr/local/cuda/include \
             -c $(PHCgpu)/MGS2/norm_kernels.cu -arch=sm_13 --ptxas-options=-v \
             -o norm_kernels.o
	@-echo ">>> compiling code for execution on the host ..."
	g++ -I$(PHCgpu)/MGS2 -I$(PHCgpu)/MGS2/DefineTypesD \
            -I$(QD_ROOT)/include -I$(GQD_HOME)/inc \
            -I/usr/local/cuda/include \
            -c $(PHCgpu)/MGS2/norm_host.cpp -o norm_host.o
	@-echo ">>> compiling the caller function ..."
	g++ -I$(PHCgpu)/MGS2 -I$(PHCgpu)/MGS2/DefineTypesD \
            -I$(QD_ROOT)/include -I$(GQD_HOME)/inc \
            -I/usr/local/cuda/include \
            -c $(PHCAda)/PHCtoC/gpu2norm_d.cpp -o gpu2norm_d.o
	@-echo ">>> compiling the main C program ..."
	gcc -c $(PHCAda)/PHCtoC/ts_gpu2norm_d_in_c.c -o ts_gpu2norm_d_in_c.o
	@-echo ">>> linking ..."
	g++ norm_host.o norm_kernels.o gpu2norm_d.o ts_gpu2norm_d_in_c.o \
            -o $(BIN)/ts_gpu2norm_d_in_c -lm \
            -lcutil_x86_64 -lcudart \
            -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib

ts_gpu2norm_d:
	@-echo ">>> compiling kernels ..."
	nvcc --define-macro precision=d -I$(PHCgpu)/DefineTypesD \
             -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
             -I/usr/local/cuda/include \
             -c $(PHCgpu)/MGS2/norm_kernels.cu -arch=sm_13 --ptxas-options=-v \
             -o norm_kernels.o
	@-echo ">>> compiling code for execution on the host ..."
	g++ -I$(PHCgpu)/MGS2 -I$(PHCgpu)/MGS2/DefineTypesD \
            -I$(QD_ROOT)/include -I$(GQD_HOME)/inc \
            -I/usr/local/cuda/include \
            -c $(PHCgpu)/MGS2/norm_host.cpp -o norm_host.o
	@-echo ">>> compiling the caller function ..."
	g++ -I$(PHCgpu)/MGS2 -I$(PHCgpu)/MGS2/DefineTypesD \
            -I$(QD_ROOT)/include -I$(GQD_HOME)/inc \
            -I/usr/local/cuda/include \
            -c $(PHCAda)/PHCtoC/gpu2norm_d.cpp -o gpu2norm_d.o
	@-echo ">>> compiling and binding the main Ada program ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpu2norm_d.adb \
                 -o ts_gpu2norm_d.o
	gnatbind ts_gpu2norm_d
	@-echo ">>> linking ..."
	gnatlink -o $(BIN)/ts_gpu2norm_d ts_gpu2norm_d \
                 norm_host.o norm_kernels.o gpu2norm_d.o -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

ts_gpu2norm_dd:
	@-echo ">>> compiling kernels ..."
	nvcc --define-macro precision=dd -I$(PHCgpu)/DefineTypesDD \
             -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
             -I/usr/local/cuda/include \
             -c $(PHCgpu)/MGS2/norm_kernels.cu -arch=sm_13 --ptxas-options=-v \
             -o norm_kernels.o
	@-echo ">>> compiling code for execution on the host ..."
	g++ -I$(PHCgpu)/MGS2 -I$(PHCgpu)/MGS2/DefineTypesDD \
            -I$(QD_ROOT)/include -I$(GQD_HOME)/inc \
            -I/usr/local/cuda/include \
            -c $(PHCgpu)/MGS2/norm_host.cpp -o norm_host.o
	@-echo ">>> compiling the caller function ..."
	g++ -I$(PHCgpu)/MGS2 -I$(PHCgpu)/MGS2/DefineTypesDD \
            -I$(PHCAda)/Math_Lib/QD \
            -I$(QD_ROOT)/include -I$(GQD_HOME)/inc \
            -I/usr/local/cuda/include \
            -c $(PHCAda)/PHCtoC/gpu2norm_dd.cpp -o gpu2norm_dd.o
	@-echo ">>> compiling main Ada program ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpu2norm_dd.adb \
                 -o ts_gpu2norm_dd.o
	gnatbind ts_gpu2norm_dd
	@-echo ">>> linking ..."
	gnatlink -o $(BIN)/ts_gpu2norm_dd ts_gpu2norm_dd \
                 norm_host.o norm_kernels.o gpu2norm_dd.o -lm \
                 -lcutil_x86_64 -lcudart $(QD_LIB)/libqd.a \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 -L$(PHCAda)/Math_Lib/QD --LINK=g++

ts_gpu2norm_qd:
	@-echo ">>> compiling kernels ..."
	nvcc --define-macro precision=qd -I$(PHCgpu)/DefineTypesQD \
             -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
             -I/usr/local/cuda/include \
             -c $(PHCgpu)/MGS2/norm_kernels.cu -arch=sm_13 --ptxas-options=-v \
             -o norm_kernels.o
	@-echo ">>> compiling code for execution on the host ..."
	g++ -I$(PHCgpu)/MGS2 -I$(PHCgpu)/MGS2/DefineTypesQD \
            -I$(QD_ROOT)/include -I$(GQD_HOME)/inc \
            -I/usr/local/cuda/include \
            -c $(PHCgpu)/MGS2/norm_host.cpp -o norm_host.o
	@-echo ">>> compiling the caller function ..."
	g++ -I$(PHCgpu)/MGS2 -I$(PHCgpu)/MGS2/DefineTypesQD \
            -I$(PHCAda)/Math_Lib/QD \
            -I$(QD_ROOT)/include -I$(GQD_HOME)/inc \
            -I/usr/local/cuda/include \
            -c $(PHCAda)/PHCtoC/gpu2norm_qd.cpp -o gpu2norm_qd.o
	@-echo ">>> compiling main Ada program ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpu2norm_qd.adb \
                 -o ts_gpu2norm_qd.o
	gnatbind ts_gpu2norm_qd
	@-echo ">>> linking ..."
	gnatlink -o $(BIN)/ts_gpu2norm_qd ts_gpu2norm_qd \
                 norm_host.o norm_kernels.o gpu2norm_qd.o -lm \
                 -lcutil_x86_64 -lcudart $(QD_LIB)/libqd.a \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 -L$(PHCAda)/Math_Lib/QD --LINK=g++

utilities_d.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Poly/utilities.cpp -o utilities_d.o

utilities_dd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesDD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Poly/utilities.cpp -o utilities_dd.o
utilities_qd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesQD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Poly/utilities.cpp -o utilities_qd.o

poly_d.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Poly/poly.cpp -o poly_d.o

poly_dd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesDD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Poly/poly.cpp -o poly_dd.o

poly_qd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesQD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Poly/poly.cpp -o poly_qd.o

polysol_d.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Poly/polysol.cpp -o polysol_d.o

polysol_dd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesDD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Poly/polysol.cpp -o polysol_dd.o

polysol_qd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesQD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Poly/polysol.cpp -o polysol_qd.o

workspace_host_d.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Path_CPU/workspace_host.cpp \
                -o workspace_host_d.o

workspace_host_dd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesDD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Path_CPU/workspace_host.cpp \
                -o workspace_host_dd.o

workspace_host_qd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesQD -I$(QD_ROOT)/include \
                -c $(PHCgpu)/Path/Path_CPU/workspace_host.cpp \
                -o workspace_host_qd.o

eval_host_d.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/eval_host.cpp \
                -o eval_host_d.o

eval_host_dd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesDD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/eval_host.cpp \
                -o eval_host_dd.o

eval_host_qd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesQD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/eval_host.cpp \
                -o eval_host_qd.o

mgs_host_d.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/mgs_host.cpp \
                -o mgs_host_d.o

mgs_host_dd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesDD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/mgs_host.cpp \
                -o mgs_host_dd.o

mgs_host_qd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesQD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/mgs_host.cpp \
                -o mgs_host_qd.o

newton_host_d.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/newton_host.cpp \
                -o newton_host_d.o

newton_host_dd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesDD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/newton_host.cpp \
                -o newton_host_dd.o

newton_host_qd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesQD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/newton_host.cpp \
                -o newton_host_qd.o

ada_test.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -I$(PHCLib) -I$(PHCgpu)/Path/Poly \
                -c $(PHCgpu)/Path/Main/ada_test.cpp -o ada_test.o

ada_test_dd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesDD -I$(QD_ROOT)/include \
                -I$(PHCLib) -I$(PHCgpu)/Path/Poly \
                -c $(PHCgpu)/Path/Main/ada_test_dd.cpp -o ada_test_dd.o

ada_test_qd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesQD -I$(QD_ROOT)/include \
                -I$(PHCLib) -I$(PHCgpu)/Path/Poly \
                -c $(PHCgpu)/Path/Main/ada_test_qd.cpp -o ada_test_qd.o

gqd_qd_util.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -I$(PHCLib) -I$(PHCgpu)/Path/Complex -I$(GQD_HOME)/inc \
                -I/usr/local/cuda/include \
                -c $(PHCgpu)/Path/Complex/gqd_qd_util.cpp -o gqd_qd_util.o

gpunewton_d.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/gpunewton_d.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -I$(PHCgpu)/Path/Path_GPU \
            -o gpunewton_d.o

gpunewton_dd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/gpunewton_dd.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesDD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -I$(PHCgpu)/Path/Path_GPU \
            -o gpunewton_dd.o

gpunewton_qd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/gpunewton_qd.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesQD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -I$(PHCgpu)/Path/Path_GPU \
            -o gpunewton_qd.o

path_gpu_d.o:
	@-echo ">>> compiling kernels ..."
	nvcc -O2 -Xcompiler -fPIC --define-macro path_precision=cd \
             -I$(PHCgpu)/Path/DefineTypesD -I$(PHCgpu)/Path/Complex \
             -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
             -I$(PHCgpu)/Path/Path_CPU -I$(PHCgpu)/Path/Path_GPU \
             -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
             -I/usr/local/cuda/include \
	     -o path_gpu_d.o \
             -c $(PHCgpu)/Path/Path_GPU/path_gpu.cu --ptxas-options=-v

path_gpu_dd.o:
	@-echo ">>> compiling kernels ..."
	nvcc -O2 -Xcompiler -fPIC --define-macro path_precision=cdd \
             -I$(PHCgpu)/Path/DefineTypesDD -I$(PHCgpu)/Path/Complex \
             -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
             -I$(PHCgpu)/Path/Path_CPU -I$(PHCgpu)/Path/Path_GPU \
             -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
             -I/usr/local/cuda/include \
	     -o path_gpu_dd.o \
             -c $(PHCgpu)/Path/Path_GPU/path_gpu.cu --ptxas-options=-v

path_gpu_qd.o:
	@-echo ">>> compiling kernels ..."
	nvcc -O2 -Xcompiler -fPIC --define-macro path_precision=cqd \
             -I$(PHCgpu)/Path/DefineTypesQD -I$(PHCgpu)/Path/Complex \
             -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
             -I$(PHCgpu)/Path/Path_CPU -I$(PHCgpu)/Path/Path_GPU \
             -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
             -I/usr/local/cuda/include \
	     -o path_gpu_qd.o \
             -c $(PHCgpu)/Path/Path_GPU/path_gpu.cu --ptxas-options=-v

ts_gpunewton: utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
              eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
              gqd_qd_util.o path_gpu_d.o gpunewton_d.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpunewton.adb \
                 -o ts_gpunewton.o
	gnatbind ts_gpunewton use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpunewton \
               gpunewton_d.o syscon.o solcon.o phcpack.o ada_test.o \
               utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
               eval_host_d.o mgs_host_d.o newton_host_d.o gqd_qd_util.o \
               path_gpu_d.o \
                 -o $(BIN)/ts_gpunewton -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

ts_gpunewton_dd: utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
                 eval_host_dd.o mgs_host_dd.o newton_host_dd.o gqd_qd_util.o \
                 ada_test_dd.o path_gpu_dd.o gpunewton_dd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpunewton_dd.adb \
                 -o ts_gpunewton.o
	gnatbind ts_gpunewton_dd use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpunewton_dd \
               gpunewton_dd.o syscon.o solcon.o phcpack.o ada_test_dd.o \
               utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
               eval_host_dd.o mgs_host_dd.o newton_host_dd.o gqd_qd_util.o \
               path_gpu_dd.o \
               $(QD_LIB)/libqd.a \
                 -o $(BIN)/ts_gpunewton_dd -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

ts_gpunewton_qd: utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
                 eval_host_qd.o mgs_host_qd.o newton_host_qd.o gqd_qd_util.o \
                 ada_test_qd.o path_gpu_qd.o gpunewton_qd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpunewton_qd.adb \
                 -o ts_gpunewton_qd.o
	gnatbind ts_gpunewton_qd use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpunewton_qd \
               gpunewton_qd.o syscon.o solcon.o phcpack.o ada_test_qd.o \
               utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
               eval_host_qd.o mgs_host_qd.o newton_host_qd.o gqd_qd_util.o \
               path_gpu_qd.o \
               $(QD_LIB)/libqd.a \
                 -o $(BIN)/ts_gpunewton_qd -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

predictor_host_d.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/predictor_host.cpp \
                -o predictor_host_d.o

predictor_host_dd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesDD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/predictor_host.cpp \
                -o predictor_host_dd.o

predictor_host_qd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesQD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/predictor_host.cpp \
                -o predictor_host_qd.o

path_host_d.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/path_host.cpp \
                -o path_host_d.o

path_host_dd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesDD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/path_host.cpp \
                -o path_host_dd.o

path_host_qd.o:
	g++ -O2 -fPIC -I$(PHCgpu)/Path/DefineTypesQD -I$(QD_ROOT)/include \
                -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Path_CPU/path_host.cpp \
                -o path_host_qd.o

gpuonepath_d.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/gpuonepath_d.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -I$(PHCgpu)/Path/Path_GPU \
            -o gpuonepath_d.o

gpuonepath_dd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/gpuonepath_dd.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesDD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -I$(PHCgpu)/Path/Path_GPU \
            -o gpuonepath_dd.o

gpuonepath_qd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/gpuonepath_qd.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesQD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -I$(PHCgpu)/Path/Path_GPU \
            -o gpuonepath_qd.o

ts_gpuonepath_d: utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
                 eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
                 gqd_qd_util.o path_gpu_d.o predictor_host_d.o path_host_d.o \
                 gpuonepath_d.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpuonepath_d.adb \
                 -o ts_gpuonepath_d.o
	gnatbind ts_gpuonepath_d use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpuonepath_d \
               gpuonepath_d.o syscon.o solcon.o phcpack.o ada_test.o \
               utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
               eval_host_d.o mgs_host_d.o newton_host_d.o gqd_qd_util.o \
               path_gpu_d.o predictor_host_d.o path_host_d.o \
                 -o $(BIN)/ts_gpuonepath_d -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

ts_gpuonepath_dd: utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
                  eval_host_dd.o mgs_host_dd.o newton_host_dd.o ada_test_dd.o \
                  gqd_qd_util.o path_gpu_dd.o predictor_host_dd.o \
                  path_host_dd.o gpuonepath_dd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpuonepath_dd.adb \
                 -o ts_gpuonepath_dd.o
	gnatbind ts_gpuonepath_dd use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpuonepath_dd \
               gpuonepath_dd.o syscon.o solcon.o phcpack.o ada_test_dd.o \
               utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
               eval_host_dd.o mgs_host_dd.o newton_host_dd.o gqd_qd_util.o \
               path_gpu_dd.o predictor_host_dd.o path_host_dd.o \
               $(QD_LIB)/libqd.a \
                 -o $(BIN)/ts_gpuonepath_dd -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

ts_gpuonepath_qd: utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
                  eval_host_qd.o mgs_host_qd.o newton_host_qd.o ada_test_qd.o \
                  gqd_qd_util.o path_gpu_qd.o predictor_host_qd.o \
                  path_host_qd.o gpuonepath_qd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpuonepath_qd.adb \
                 -o ts_gpuonepath_qd.o
	gnatbind ts_gpuonepath_qd use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpuonepath_qd \
               gpuonepath_qd.o syscon.o solcon.o phcpack.o ada_test_qd.o \
               utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
               eval_host_qd.o mgs_host_qd.o newton_host_qd.o gqd_qd_util.o \
               path_gpu_qd.o predictor_host_qd.o path_host_qd.o \
               $(QD_LIB)/libqd.a \
                 -o $(BIN)/ts_gpuonepath_qd -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

err_check_d.o:
	g++ -O2 -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
                -I/usr/local/cuda/include \
                -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly \
                -I$(PHCgpu)/Path/Path_CPU -I$(PHCgpu)/Path/Path_GPU \
                -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Main/err_check.cpp \
                -o err_check_d.o

path_data_d.o:
	g++ -O2 -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
                -I/usr/local/cuda/include \
                -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly \
                -I$(PHCgpu)/Path/Path_CPU -I$(PHCgpu)/Path/Path_GPU \
                -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Main/path_data.cpp \
                -o path_data_d.o

path_test_d.o:
	g++ -O2 -I$(PHCgpu)/Path/DefineTypesD -I$(QD_ROOT)/include \
                -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
                -I/usr/local/cuda/include \
                -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly \
                -I$(PHCgpu)/Path/Path_CPU -I$(PHCgpu)/Path/Path_GPU \
                -I$(PHCgpu)/Path/Main \
                -c $(PHCgpu)/Path/Main/path_test.cpp \
                -o path_test_d.o

gpumanypaths_d.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/gpumanypaths_d.cpp -I$(PHCLib) \
            -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
            -I/usr/local/cuda/include \
            -I$(PHCgpu)/Path/DefineTypesD -I$(PHCgpu)/Path/Main \
            -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -I$(PHCgpu)/Path/Path_GPU \
            -o gpumanypaths_d.o

gpumanypaths_dd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/gpumanypaths_dd.cpp -I$(PHCLib) \
            -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
            -I/usr/local/cuda/include \
            -I$(PHCgpu)/Path/DefineTypesDD -I$(PHCgpu)/Path/Main \
            -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -I$(PHCgpu)/Path/Path_GPU \
            -o gpumanypaths_dd.o

gpumanypaths_qd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/gpumanypaths_qd.cpp -I$(PHCLib) \
            -I$(GQD_HOME)/inc -I$(SDK_HOME)/C/common/inc \
            -I/usr/local/cuda/include \
            -I$(PHCgpu)/Path/DefineTypesQD -I$(PHCgpu)/Path/Main \
            -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -I$(PHCgpu)/Path/Path_GPU \
            -o gpumanypaths_qd.o

ts_gpumanypaths_d: utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
                   eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
                   gqd_qd_util.o path_gpu_d.o predictor_host_d.o \
                   path_host_d.o gpumanypaths_d.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpumanypaths_d.adb \
                 -o ts_gpumanypaths_d.o
	gnatbind ts_gpumanypaths_d use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpumanypaths_d \
               gpumanypaths_d.o syscon.o solcon.o phcpack.o ada_test.o \
               utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
               eval_host_d.o mgs_host_d.o newton_host_d.o gqd_qd_util.o \
               path_gpu_d.o predictor_host_d.o path_host_d.o \
                 -o $(BIN)/ts_gpumanypaths_d -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

ts_gpumanypaths_dd: utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
                  eval_host_dd.o mgs_host_dd.o newton_host_dd.o ada_test_dd.o \
                  gqd_qd_util.o path_gpu_dd.o predictor_host_dd.o \
                  path_host_dd.o gpumanypaths_dd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpumanypaths_dd.adb \
                 -o ts_gpumanypaths_dd.o
	gnatbind ts_gpumanypaths_dd use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpumanypaths_dd \
               gpumanypaths_dd.o syscon.o solcon.o phcpack.o ada_test_dd.o \
               utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
               eval_host_dd.o mgs_host_dd.o newton_host_dd.o gqd_qd_util.o \
               path_gpu_dd.o predictor_host_dd.o path_host_dd.o \
               $(QD_LIB)/libqd.a \
                 -o $(BIN)/ts_gpumanypaths_dd -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

ts_gpumanypaths_qd: utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
                  eval_host_qd.o mgs_host_qd.o newton_host_qd.o ada_test_qd.o \
                  gqd_qd_util.o path_gpu_qd.o predictor_host_qd.o \
                  path_host_qd.o gpumanypaths_qd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpumanypaths_qd.adb \
                 -o ts_gpumanypaths_qd.o
	gnatbind ts_gpumanypaths_qd use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpumanypaths_qd \
               gpumanypaths_qd.o syscon.o solcon.o phcpack.o ada_test_qd.o \
               utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
               eval_host_qd.o mgs_host_qd.o newton_host_qd.o gqd_qd_util.o \
               path_gpu_qd.o predictor_host_qd.o path_host_qd.o \
               $(QD_LIB)/libqd.a \
                 -o $(BIN)/ts_gpumanypaths_qd -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

ts_gpupath_d: utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
              eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
              gqd_qd_util.o path_gpu_d.o predictor_host_d.o \
              path_host_d.o gpunewton_d.o gpuonepath_d.o gpumanypaths_d.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpupath_d.adb \
                 -o ts_gpupath_d.o
	gnatbind ts_gpupath_d use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpupath_d gpunewton_d.o gpuonepath_d.o \
               gpumanypaths_d.o syscon.o solcon.o phcpack.o ada_test.o \
               utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
               eval_host_d.o mgs_host_d.o newton_host_d.o gqd_qd_util.o \
               path_gpu_d.o predictor_host_d.o path_host_d.o \
                 -o $(BIN)/ts_gpupath_d -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

ts_gpupath_dd: utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
               eval_host_dd.o mgs_host_dd.o newton_host_dd.o ada_test_dd.o \
               gqd_qd_util.o path_gpu_dd.o predictor_host_dd.o \
               path_host_dd.o gpunewton_dd.o gpuonepath_dd.o gpumanypaths_dd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpupath_dd.adb \
                 -o ts_gpupath_dd.o
	gnatbind ts_gpupath_dd use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpupath_dd gpunewton_dd.o gpuonepath_dd.o \
               gpumanypaths_dd.o syscon.o solcon.o phcpack.o ada_test_dd.o \
               utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
               eval_host_dd.o mgs_host_dd.o newton_host_dd.o gqd_qd_util.o \
               path_gpu_dd.o predictor_host_dd.o path_host_dd.o \
               $(QD_LIB)/libqd.a \
                 -o $(BIN)/ts_gpupath_dd -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

ts_gpupath_qd: utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
               eval_host_qd.o mgs_host_qd.o newton_host_qd.o ada_test_qd.o \
               gqd_qd_util.o path_gpu_qd.o predictor_host_qd.o \
               path_host_qd.o gpunewton_qd.o gpuonepath_qd.o gpumanypaths_qd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_gpupath_qd.adb \
                 -o ts_gpupath_qd.o
	gnatbind ts_gpupath_qd use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_gpupath_qd gpunewton_qd.o gpuonepath_qd.o \
               gpumanypaths_qd.o syscon.o solcon.o phcpack.o ada_test_qd.o \
               utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
               eval_host_qd.o mgs_host_qd.o newton_host_qd.o gqd_qd_util.o \
               path_gpu_qd.o predictor_host_qd.o path_host_qd.o \
               $(QD_LIB)/libqd.a \
                 -o $(BIN)/ts_gpupath_qd -lm \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 --LINK=g++

adenewton_d.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/adenewton_d.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -o adenewton_d.o
adenewton_dd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/adenewton_dd.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesDD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -o adenewton_dd.o
adenewton_qd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/adenewton_qd.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesQD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -o adenewton_qd.o

adeonepath_d.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/adeonepath_d.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -o adeonepath_d.o
adeonepath_dd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/adeonepath_dd.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesDD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -o adeonepath_dd.o
adeonepath_qd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/adeonepath_qd.cpp -I$(PHCLib) \
            -I $(PHCgpu)/Path/DefineTypesQD -I $(PHCgpu)/Path/Main \
            -I $(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -o adeonepath_qd.o

ademanypaths_d.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/ademanypaths_d.cpp -I$(PHCLib) \
            -I$(PHCgpu)/Path/DefineTypesD -I$(PHCgpu)/Path/Main \
            -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -o ademanypaths_d.o
ademanypaths_dd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/ademanypaths_dd.cpp -I$(PHCLib) \
            -I$(PHCgpu)/Path/DefineTypesDD -I$(PHCgpu)/Path/Main \
            -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -o ademanypaths_dd.o
ademanypaths_qd.o: 
	g++ -O2 -fPIC -c $(PHCAda)/PHCtoC/ademanypaths_qd.cpp -I$(PHCLib) \
            -I$(PHCgpu)/Path/DefineTypesQD -I$(PHCgpu)/Path/Main \
            -I$(PHCgpu)/Path/Poly -I$(PHCgpu)/Path/Path_CPU \
            -o ademanypaths_qd.o

ts_adepath_d: utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
              eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
              predictor_host_d.o \
              path_host_d.o adenewton_d.o adeonepath_d.o ademanypaths_d.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_adepath_d.adb \
                 -o ts_adepath_d.o
	gnatbind ts_adepath_d use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_adepath_d adenewton_d.o adeonepath_d.o \
               ademanypaths_d.o syscon.o solcon.o phcpack.o ada_test.o \
               utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
               eval_host_d.o mgs_host_d.o newton_host_d.o \
               predictor_host_d.o path_host_d.o \
                 -o $(BIN)/ts_adepath_d -lm --LINK=g++

ts_adepath_dd: utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
               eval_host_dd.o mgs_host_dd.o newton_host_dd.o ada_test_dd.o \
               predictor_host_dd.o path_host_dd.o \
               adenewton_dd.o adeonepath_dd.o ademanypaths_dd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_adepath_dd.adb \
                 -o ts_adepath_dd.o
	gnatbind ts_adepath_dd use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_adepath_dd adenewton_dd.o adeonepath_dd.o \
                 ademanypaths_dd.o syscon.o solcon.o phcpack.o ada_test_dd.o \
                 utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
                 eval_host_dd.o mgs_host_dd.o newton_host_dd.o \
                 predictor_host_dd.o path_host_dd.o \
                 $(QD_LIB)/libqd.a \
                 -o $(BIN)/ts_adepath_dd -lm --LINK=g++

ts_adepath_qd: utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
               eval_host_qd.o mgs_host_qd.o newton_host_qd.o ada_test_qd.o \
               predictor_host_qd.o path_host_qd.o \
               adenewton_qd.o adeonepath_qd.o ademanypaths_qd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main Ada procedure ..."
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) ts_adepath_qd.adb \
                 -o ts_adepath_qd.o
	gnatbind ts_adepath_qd use_c2phc
	@-echo ">>> linking ..."
	gnatlink ts_adepath_qd adenewton_qd.o adeonepath_qd.o \
                 ademanypaths_qd.o syscon.o solcon.o phcpack.o ada_test_qd.o \
                 utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
                 eval_host_qd.o mgs_host_qd.o newton_host_qd.o \
                 predictor_host_qd.o path_host_qd.o \
                 $(QD_LIB)/libqd.a \
                 -o $(BIN)/ts_adepath_qd -lm --LINK=g++

# Test programs for the Tasking :

ts_mtmatvec:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtmatvec.adb \
              -o $(BIN)/ts_mtmatvec

ts_mtpolval:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtpolval.adb \
              -o $(BIN)/ts_mtpolval

ts_mtlinsol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtlinsol.adb \
              -o $(BIN)/ts_mtlinsol

ts_mtlinsolV0:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtlinsolV0.adb \
              -o $(BIN)/ts_mtlinsolV0

ts_mtlinsolv1:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtlinsolv1.adb \
              -o $(BIN)/ts_mtlinsolv1

ts_tasking:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_tasking.adb \
	       -o $(BIN)/ts_tasking

ts_mutex:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mutex.adb -o $(BIN)/ts_mutex

ts_jobs:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_jobs.adb -o $(BIN)/ts_jobs

ts_mtsols:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtsols.adb -o $(BIN)/ts_mtsols

ts_mtcont:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtcont.adb -o $(BIN)/ts_mtcont

ts_mtstref:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtstref.adb -o $(BIN)/ts_mtstref

ts_mtsharp:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtsharp.adb -o $(BIN)/ts_mtsharp

ts_mtvol:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtvol.adb -o $(BIN)/ts_mtvol

ts_mtvolcon:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtvolcon.adb \
              -o $(BIN)/ts_mtvolcon

ts_mtverify:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_mtverify.adb \
              -o $(BIN)/ts_mtverify

# Test programs for the Main interactive drivers :

ts_drivroco:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_drivroco.adb \
              -o $(BIN)/ts_drivroco

use_phc:
	gnatmake $(INCLULIBS) $(GNATFLAGS) use_phc.adb \
              -o $(BIN)/use_phc

ts_greet:
	gnatmake $(INCLULIBS) $(GNATFLAGS) ts_greet.adb \
              -o $(BIN)/ts_greet

# Test programs for the Library Lib :

phcpack.o:
	gcc -c $(PHCLib)/phcpack.c

use_c2phc.o:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb

ts_list2str:
	gcc -c $(PHCLib)/lists_and_strings.c
	gcc -c $(PHCLib)/ts_list2str.c
	gcc lists_and_strings.o ts_list2str.o -o $(BIN)/ts_list2str

lib_syscon:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/lib_syscon.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc syscon.o lib_syscon.o -o $(BIN)/lib_syscon

lib_syscon_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_syscon.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc syscon.o lib_syscon.o -o $(BIN)/lib_syscon \
                 --LINK=g++

lib_solcon:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/lib_solcon.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc solcon.o lib_solcon.o -o $(BIN)/lib_solcon

lib_solcon_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1  -c $(PHCLib)/solcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_solcon.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc solcon.o lib_solcon.o -o $(BIN)/lib_solcon \
                 --LINK=g++

lib_read:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/lib_read.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o lib_read.o \
                 -o $(BIN)/lib_read -lm

lib_read_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_read.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o lib_read.o \
                 -o $(BIN)/lib_read -lm --LINK=g++

lib_newton:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/lib_newton.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o solcon.o lib_newton.o \
                 -o $(BIN)/lib_newton -lm

lib_newton_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_newton.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o solcon.o lib_newton.o \
                 -o $(BIN)/lib_newton -lm --LINK=g++

lib_roco:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/product.c
	gcc -c $(PHCLib)/lib_roco.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o solcon.o product.o \
                    lib_roco.o -o $(BIN)/lib_roco -lm

lib_roco_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/product.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_roco.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o solcon.o product.o \
                    lib_roco.o -o $(BIN)/lib_roco -lm --LINK=g++

lib_celcon:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/celcon.c
	gcc -c $(PHCLib)/lib_celcon.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o solcon.o celcon.o \
                    lib_celcon.o -o $(BIN)/lib_celcon -lm

lib_celcon_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/celcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_celcon.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o solcon.o celcon.o \
                    lib_celcon.o -o $(BIN)/lib_celcon -lm --LINK=g++

lib_celphc:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/celcon.c
	gcc -c $(PHCLib)/lib_celphc.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o celcon.o \
                    lib_celphc.o -o $(BIN)/lib_celphc -lm

lib_celphc_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/celcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_celphc.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o celcon.o \
                    lib_celphc.o -o $(BIN)/lib_celphc -lm --LINK=g++

lib_scale:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/scalers.c
	gcc -c $(PHCLib)/lib_scale.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o scalers.o lib_scale.o \
                 -o $(BIN)/lib_scale -lm

lib_scale_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/scalers.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_scale.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o scalers.o lib_scale.o \
                 -o $(BIN)/lib_scale -lm --LINK=g++

lib_conpar:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/lib_conpar.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o lib_conpar.o -o $(BIN)/lib_conpar -lm

lib_conpar_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_conpar.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o lib_conpar.o -o $(BIN)/lib_conpar -lm \
                 --LINK=g++

lib_poco:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/lib_poco.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o lib_poco.o -o $(BIN)/lib_poco -lm

lib_poco_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_poco.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o lib_poco.o -o $(BIN)/lib_poco -lm \
                 --LINK=g++

lib_track:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/jump_track.c
	gcc -c $(PHCLib)/witset.c
	gcc -c $(PHCLib)/lib_track.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o solcon.o witset.o \
                 jump_track.o lib_track.o -o $(BIN)/lib_track -lm

lib_track_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/jump_track.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/witset.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_track.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o syscon.o solcon.o witset.o \
                 jump_track.o lib_track.o -o $(BIN)/lib_track -lm \
                 --LINK=g++

lib_nxtsol:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/jump_track.c
	gcc -c $(PHCLib)/next_track.c
	gcc -c $(PHCLib)/lib_nxtsol.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o jump_track.o \
                    next_track.o lib_nxtsol.o -o $(BIN)/lib_nxtsol

lib_nxtsol_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/jump_track.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/next_track.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_nxtsol.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o jump_track.o \
                    next_track.o lib_nxtsol.o -o $(BIN)/lib_nxtsol \
                 --LINK=g++

lib_pieri:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2pieri.adb
	gcc -c -O2 $(PHCLib)/lib_pieri.c
	gnatbind -n use_c2pieri
	gnatlink -C use_c2pieri lib_pieri.o -o $(BIN)/lib_pieri

lib_pieri_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2pieri.adb
	g++ -Dcompilewgpp=1 -c -O2 $(PHCLib)/lib_pieri.c
	gnatbind -n use_c2pieri
	gnatlink -C use_c2pieri lib_pieri.o -o $(BIN)/lib_pieri \
                 --LINK=g++

lib_lrhom:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c -O2 $(PHCLib)/schubert.c
	gcc -c -O2 $(PHCLib)/lib_lrhom.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc schubert.o lib_lrhom.o -o $(BIN)/lib_lrhom -lm

lib_lrhom_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c -O2 $(PHCLib)/schubert.c
	g++ -Dcompilewgpp=1 -c -O2 $(PHCLib)/lib_lrhom.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc schubert.o lib_lrhom.o -o $(BIN)/lib_lrhom -lm \
                 --LINK=g++

lib_factor:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/witset.c
	gcc -c $(PHCLib)/lib_factor.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o witset.o lib_factor.o \
                 -o $(BIN)/lib_factor -lm

lib_factor_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp -c $(PHCLib)/solcon.c
	g++ -Dcompilewgpp -c $(PHCLib)/witset.c
	g++ -Dcompilewgpp -c $(PHCLib)/lib_factor.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o witset.o lib_factor.o \
                 -o $(BIN)/lib_factor -lm --LINK=g++

lib_usolve:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/unisolvers.c
	gcc -c $(PHCLib)/lib_usolve.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc syscon.o solcon.o unisolvers.o lib_usolve.o \
                 -o $(BIN)/lib_usolve -lm

lib_usolve_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/unisolvers.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_usolve.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc syscon.o solcon.o unisolvers.o lib_usolve.o \
                 -o $(BIN)/lib_usolve -lm --LINK=g++

lib_giftwrap:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/giftwrappers.c
	gcc -c $(PHCLib)/lib_giftwrap.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc giftwrappers.o lib_giftwrap.o \
                 -o $(BIN)/lib_giftwrap -lm

lib_giftwrap_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/giftwrappers.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/lib_giftwrap.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc giftwrappers.o lib_giftwrap.o \
                 -o $(BIN)/lib_giftwrap -lm --LINK=g++

adepath_d.o: adenewton_d.o adeonepath_d.o ademanypaths_d.o
	g++ -O2 -Dcompilewgpp=1 -fPIC -I$(PHCAda)/PHCtoC \
            -I$(PHCgpu)/Path/DefineTypesD -I$(PHCgpu)/Path/Poly \
            -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly \
            -c $(PHCLib)/adepath_d.c
gpupath_d.o: gpunewton_d.o gpuonepath_d.o gpumanypaths_d.o
	g++ -O2 -Dcompilewgpp=1 -fPIC -I$(PHCAda)/PHCtoC \
            -I$(PHCgpu)/Path/DefineTypesD -I$(PHCgpu)/Path/Poly \
            -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly \
            -c $(PHCLib)/gpupath_d.c
adepath_dd.o: adenewton_dd.o adeonepath_dd.o ademanypaths_dd.o
	g++ -O2 -Dcompilewgpp=1 -fPIC -I$(PHCAda)/PHCtoC \
            -I$(PHCgpu)/Path/DefineTypesDD -I$(PHCgpu)/Path/Poly \
            -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly \
            -c $(PHCLib)/adepath_dd.c
gpupath_dd.o: gpunewton_dd.o gpuonepath_dd.o gpumanypaths_dd.o
	g++ -O2 -Dcompilewgpp=1 -fPIC -I$(PHCAda)/PHCtoC \
            -I$(PHCgpu)/Path/DefineTypesDD -I$(PHCgpu)/Path/Poly \
            -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly \
            -c $(PHCLib)/gpupath_dd.c
adepath_qd.o: adenewton_qd.o adeonepath_qd.o ademanypaths_qd.o
	g++ -O2 -Dcompilewgpp=1 -fPIC -I$(PHCAda)/PHCtoC \
            -I$(PHCgpu)/Path/DefineTypesQD -I$(PHCgpu)/Path/Poly \
            -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly \
            -c $(PHCLib)/adepath_qd.c
gpupath_qd.o: gpunewton_qd.o gpuonepath_qd.o gpumanypaths_qd.o
	g++ -O2 -Dcompilewgpp=1 -fPIC -I$(PHCAda)/PHCtoC \
            -I$(PHCgpu)/Path/DefineTypesDD -I$(PHCgpu)/Path/Poly \
            -I$(PHCgpu)/Path/Complex -I$(PHCgpu)/Path/Poly \
            -c $(PHCLib)/gpupath_qd.c

lib_adepath_d: utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
               eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
               predictor_host_d.o path_host_d.o adepath_d.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main C program ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/lib_adepath_d.c
	@-echo ">>> linking ..."
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc lib_adepath_d.o adepath_d.o \
                    adenewton_d.o adeonepath_d.o ademanypaths_d.o \
                    syscon.o solcon.o phcpack.o ada_test.o \
                    utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
                    eval_host_d.o mgs_host_d.o newton_host_d.o \
                    predictor_host_d.o path_host_d.o \
                 -o $(BIN)/lib_adepath_d -lm --LINK=g++

lib_gpupath_d: utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
               eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
               predictor_host_d.o path_host_d.o path_gpu_d.o gpupath_d.o \
               gqd_qd_util.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main C program ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/lib_gpupath_d.c
	@-echo ">>> linking ..."
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc lib_gpupath_d.o gpupath_d.o \
                    gpunewton_d.o gpuonepath_d.o gpumanypaths_d.o \
                    syscon.o solcon.o phcpack.o ada_test.o \
                    utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
                    eval_host_d.o mgs_host_d.o newton_host_d.o \
                    predictor_host_d.o path_host_d.o path_gpu_d.o \
                    gqd_qd_util.o \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 -o $(BIN)/lib_gpupath_d -lm --LINK=g++

lib_gpupath_dd: utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
              eval_host_dd.o mgs_host_dd.o newton_host_dd.o ada_test_dd.o \
              predictor_host_dd.o path_host_dd.o path_gpu_dd.o gpupath_dd.o \
              gqd_qd_util.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main C program ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/lib_gpupath_dd.c
	@-echo ">>> linking ..."
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc lib_gpupath_dd.o gpupath_dd.o \
                    gpunewton_dd.o gpuonepath_dd.o gpumanypaths_dd.o \
                    syscon.o solcon.o phcpack.o ada_test_dd.o \
                    utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
                    eval_host_dd.o mgs_host_dd.o newton_host_dd.o \
                    predictor_host_dd.o path_host_dd.o path_gpu_dd.o \
                    gqd_qd_util.o \
                 -lcutil_x86_64 -lcudart $(QD_LIB)/libqd.a \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 -o $(BIN)/lib_gpupath_dd -lm --LINK=g++

lib_gpupath_qd: utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
              eval_host_qd.o mgs_host_qd.o newton_host_qd.o ada_test_qd.o \
              predictor_host_qd.o path_host_qd.o path_gpu_qd.o gpupath_qd.o \
              gqd_qd_util.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main C program ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/lib_gpupath_qd.c
	@-echo ">>> linking ..."
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc lib_gpupath_qd.o gpupath_qd.o \
                    gpunewton_qd.o gpuonepath_qd.o gpumanypaths_qd.o \
                    syscon.o solcon.o phcpack.o ada_test_qd.o \
                    utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
                    eval_host_qd.o mgs_host_qd.o newton_host_qd.o \
                    predictor_host_qd.o path_host_qd.o path_gpu_qd.o \
                    gqd_qd_util.o \
                 -lcutil_x86_64 -lcudart $(QD_LIB)/libqd.a \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 -o $(BIN)/lib_gpupath_qd -lm --LINK=g++

lib_adepath_dd: utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
                eval_host_dd.o mgs_host_dd.o newton_host_dd.o ada_test_dd.o \
                predictor_host_dd.o path_host_dd.o adepath_dd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main C program ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/lib_adepath_dd.c
	@-echo ">>> linking ..."
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc lib_adepath_dd.o adepath_dd.o \
                    adenewton_dd.o adeonepath_dd.o ademanypaths_dd.o \
                    syscon.o solcon.o phcpack.o ada_test_dd.o \
                    utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
                    eval_host_dd.o mgs_host_dd.o newton_host_dd.o \
                    predictor_host_dd.o path_host_dd.o \
                    $(QD_LIB)/libqd.a \
                 -o $(BIN)/lib_adepath_dd -lm --LINK=g++

lib_adepath_qd: utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
                eval_host_qd.o mgs_host_qd.o newton_host_qd.o ada_test_qd.o \
                predictor_host_qd.o path_host_qd.o adepath_qd.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	@-echo ">>> compiling code for the containers ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	@-echo ">>> compiling the main C program ..."
	g++ -O2 -Dcompilewgpp=1 -c $(PHCLib)/lib_adepath_qd.c
	@-echo ">>> linking ..."
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc lib_adepath_qd.o adepath_qd.o \
                    adenewton_qd.o adeonepath_qd.o ademanypaths_qd.o \
                    syscon.o solcon.o phcpack.o ada_test_qd.o \
                    utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
                    eval_host_qd.o mgs_host_qd.o newton_host_qd.o \
                    predictor_host_qd.o path_host_qd.o \
                    $(QD_LIB)/libqd.a \
                 -o $(BIN)/lib_adepath_qd -lm --LINK=g++

phc_solve:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/phc_solve.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc syscon.o solcon.o phcpack.o phc_solve.o \
                 -o $(BIN)/phc_solve -lm

phc_solve_cpp:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	g++ -Dcompilewgpp=1 -c $(PHCLib)/syscon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/solcon.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phcpack.c
	g++ -Dcompilewgpp=1 -c $(PHCLib)/phc_solve.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc syscon.o solcon.o phcpack.o phc_solve.o \
                 -o $(BIN)/phc_solve -lm --LINK=g++

phcpy2c.so:
	gcc -static -c -fPIC -O2 $(PHCLib)/syscon.c
	gcc -static -c -fPIC -O2 $(PHCLib)/solcon.c
	gcc -static -c -fPIC -O2 $(PHCLib)/product.c
	gcc -static -c -fPIC -O2 $(PHCLib)/lists_and_strings.c
	gcc -static -c -fPIC -O2 $(PHCLib)/celcon.c
	gcc -static -c -fPIC -O2 $(PHCLib)/scalers.c
	gcc -static -c -fPIC -O2 $(PHCLib)/witset.c
	gcc -static -c -fPIC -O2 $(PHCLib)/unisolvers.c
	gcc -static -c -fPIC -O2 $(PHCLib)/giftwrappers.c
	gcc -static -c -fPIC -O2 $(PHCLib)/phcpack.c
	gcc -static -c -fPIC -O2 $(PHCLib)/schubert.c
	gcc -static -c -fPIC -O2 $(PHCLib)/mapcon.c
	gcc -static -c -fPIC -O2 $(PHCLib)/next_track.c
	gcc -static -c -fPIC -I$(PYTHON) -I$(PYTHON)/Include \
                               $(PHCLib)/phcpy2c.c
	gnatmake -static -c -fPIC $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind -n -shared use_c2phc
	gnatlink -shared -C use_c2phc syscon.o solcon.o product.o celcon.o \
            lists_and_strings.o phcpack.o witset.o schubert.o mapcon.o \
            next_track.o phcpy2c.o unisolvers.o giftwrappers.o scalers.o \
            -o ../Python/PHCpy/phcpy/phcpy2c.so -lm

# phcpy2c with double version of Path library :

phcpy2cadepath_d.so: utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
            eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
            predictor_host_d.o path_host_d.o adepath_d.o
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/syscon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/solcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/product.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/lists_and_strings.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/celcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/scalers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/witset.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/schubert.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/unisolvers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/giftwrappers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/phcpack.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/mapcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/next_track.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 \
                    -I$(PYTHON) -I$(PYTHON)/Include \
                      $(PHCLib)/phcpy2cadepath_d.cpp -o phcpy2cadepath_d.o
	gnatmake -static -c -fPIC $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind -n -shared use_c2phc
	gnatlink -shared -C use_c2phc phcpy2cpath_d.o \
            phcpack.o syscon.o witset.o mapcon.o next_track.o unisolvers.o \
            giftwrappers.o solcon.o product.o lists_and_strings.o celcon.o \
            scalers.o schubert.o \
            utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
            eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
            predictor_host_d.o path_host_d.o \
            adenewton_d.o adeonepath_d.o ademanypaths_d.o adepath_d.o \
                 -lm --LINK=g++ -fPIC \
                 -o ../Python/PHCpy/phcpy/phcpy2cadepath_d.so

phcpy2cpath_d.so: utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
            eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
            predictor_host_d.o path_host_d.o adepath_d.o path_gpu_d.o \
            gqd_qd_util.o gpupath_d.o
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/syscon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/solcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/product.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/lists_and_strings.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/celcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/scalers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/witset.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/schubert.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/unisolvers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/giftwrappers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/phcpack.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/mapcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/next_track.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 \
                    -I$(PYTHON) -I$(PYTHON)/Include \
                      $(PHCLib)/phcpy2cpath_d.cpp -o phcpy2cpath_d.o
	gnatmake -static -c -fPIC $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind -n -shared use_c2phc
	gnatlink -shared -C use_c2phc phcpy2cpath_d.o \
            phcpack.o syscon.o witset.o mapcon.o next_track.o unisolvers.o \
            giftwrappers.o solcon.o product.o lists_and_strings.o celcon.o \
            scalers.o schubert.o \
            utilities_d.o poly_d.o polysol_d.o workspace_host_d.o \
            eval_host_d.o mgs_host_d.o newton_host_d.o ada_test.o \
            predictor_host_d.o path_host_d.o gqd_qd_util.o path_gpu_d.o \
            adenewton_d.o adeonepath_d.o ademanypaths_d.o adepath_d.o \
            gpunewton_d.o gpuonepath_d.o gpumanypaths_d.o gpupath_d.o \
                 -lcutil_x86_64 -lcudart \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 -lm --LINK=g++ -fPIC \
                 -o ../Python/PHCpy/phcpy/phcpy2cpath_d.so

phcpy2cpath_dd.so: utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
            eval_host_dd.o mgs_host_dd.o newton_host_dd.o ada_test_dd.o \
            predictor_host_dd.o path_host_dd.o adepath_dd.o path_gpu_dd.o \
            gqd_qd_util.o gpupath_dd.o
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/syscon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/solcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/product.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/lists_and_strings.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/celcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/scalers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/witset.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/schubert.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/unisolvers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/giftwrappers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/phcpack.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/mapcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/next_track.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 \
                    -I$(PYTHON) -I$(PYTHON)/Include \
                      $(PHCLib)/phcpy2cpath_dd.cpp -o phcpy2cpath_dd.o
	gnatmake -static -c -fPIC $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind -n -shared use_c2phc
	gnatlink -shared -C use_c2phc phcpy2cpath_dd.o \
            phcpack.o syscon.o witset.o mapcon.o next_track.o unisolvers.o \
            giftwrappers.o solcon.o product.o lists_and_strings.o celcon.o \
            scalers.o schubert.o \
            utilities_dd.o poly_dd.o polysol_dd.o workspace_host_dd.o \
            eval_host_dd.o mgs_host_dd.o newton_host_dd.o ada_test_dd.o \
            predictor_host_dd.o path_host_dd.o gqd_qd_util.o path_gpu_dd.o \
            adenewton_dd.o adeonepath_dd.o ademanypaths_dd.o adepath_dd.o \
            gpunewton_dd.o gpuonepath_dd.o gpumanypaths_dd.o gpupath_dd.o \
                 -lcutil_x86_64 -lcudart $(QD_LIB)/libqd.a \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 -lm --LINK=g++ -fPIC \
                 -o ../Python/PHCpy/phcpy/phcpy2cpath_dd.so

phcpy2cpath_qd.so: utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
            eval_host_qd.o mgs_host_qd.o newton_host_qd.o ada_test_qd.o \
            predictor_host_qd.o path_host_qd.o adepath_qd.o path_gpu_qd.o \
            gqd_qd_util.o gpupath_qd.o
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/syscon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/solcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/product.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/lists_and_strings.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/celcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/scalers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/witset.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/schubert.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/unisolvers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/giftwrappers.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/phcpack.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/mapcon.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 $(PHCLib)/next_track.c
	g++ -static -Dcompilewgpp=1 -c -fPIC -O2 \
                    -I$(PYTHON) -I$(PYTHON)/Include \
                      $(PHCLib)/phcpy2cpath_qd.cpp -o phcpy2cpath_qd.o
	gnatmake -static -c -fPIC $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind -n -shared use_c2phc
	gnatlink -shared -C use_c2phc phcpy2cpath_qd.o \
            phcpack.o syscon.o witset.o mapcon.o next_track.o unisolvers.o \
            giftwrappers.o solcon.o product.o lists_and_strings.o celcon.o \
            scalers.o schubert.o \
            utilities_qd.o poly_qd.o polysol_qd.o workspace_host_qd.o \
            eval_host_qd.o mgs_host_qd.o newton_host_qd.o ada_test_qd.o \
            predictor_host_qd.o path_host_qd.o gqd_qd_util.o path_gpu_qd.o \
            adenewton_qd.o adeonepath_qd.o ademanypaths_qd.o adepath_qd.o \
            gpunewton_qd.o gpuonepath_qd.o gpumanypaths_qd.o gpupath_qd.o \
                 -lcutil_x86_64 -lcudart $(QD_LIB)/libqd.a \
                 -L/usr/local/cuda/lib64 -L$(SDK_HOME)/C/lib \
                 -lm --LINK=g++ -fPIC \
                 -o ../Python/PHCpy/phcpy/phcpy2cpath_qd.so

# how to make the executables with MPI:

adatest:
	$(CC) -c $(MPILib)/call_hello.c
	$(CC) -c $(MPILib)/adatest.c
	gnatmake -c $(MPILib)/hello.adb
	gnatbind -n hello
	gnatlink -C hello call_hello.o adatest.o -o ../bin/adatest \
                 --LINK=$(CLINKER)

mpi2sys:
	$(CC) -c $(MPILib)/mpi2sys.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_syscon.adb
	gnatbind -n use_syscon
	gnatlink -C use_syscon mpi2sys.o -o ../bin/mpi2sys \
                 --LINK=$(CLINKER)

mpi2sol:
	$(CC) -c $(MPILib)/mpi2sol.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_solcon.adb
	gnatbind -n use_solcon
	gnatlink -C use_solcon mpi2sol.o -o ../bin/mpi2sol \
                 --LINK=$(CLINKER)

mpi2hom:
	$(CC) -c $(MPILib)/mpi2hom.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc mpi2hom.o -o ../bin/mpi2hom \
                 --LINK=$(CLINKER)

mpi2phc_s:
	$(CC) -c $(MPILib)/mpi2phc_s.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc mpi2phc_s.o -o ../bin/mpi2phc_s \
                 --LINK=$(CLINKER)

mpi2phc_d2:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	$(CC) -c $(MPILib)/mpi2phc_d2.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o \
                    mpi2phc_d2.o -o ../bin/mpi2phc_d2 \
                 --LINK=$(CLINKER)

double_double.o:
	gcc -c -I$(PHCAda)/Math_Lib/QD $(PHCAda)/Math_Lib/QD/double_double.c \
            -o double_double.o

quad_double.o:
	gcc -c -I$(PHCAda)/Math_Lib/QD $(PHCAda)/Math_Lib/QD/quad_double.c \
            -o quad_double.o

mpi2phc_dd: double_double.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	$(CC) -c -I$(PHCAda)/Math_Lib/QD $(MPILib)/mpi2phc_dd.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o double_double.o \
                    mpi2phc_dd.o -o ../bin/mpi2phc_dd \
                 --LINK=$(CLINKER) -lm

mpi2phc_qd: double_double.o quad_double.o
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	$(CC) -c -I$(PHCAda)/Math_Lib/QD $(MPILib)/mpi2phc_qd.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o double_double.o \
                    quad_double.o mpi2phc_qd.o -o ../bin/mpi2phc_qd \
                 --LINK=$(CLINKER) -lm

mpi2track:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(COFLAGS) $(PHCLib)/phcpack.c
	gcc -c $(COFLAGS) $(PHCLib)/syscon.c
	gcc -c $(COFLAGS) $(PHCLib)/solcon.c
	gcc -c $(COFLAGS) $(PHCLib)/witset.c
	gcc -c $(COFLAGS) $(PHCLib)/jump_track.c
	$(CC) -c $(COFLAGS) $(MPILib)/parallel_phcpack.c
	$(CC) -c $(COFLAGS) $(MPILib)/mpi2track.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o witset.o \
                    jump_track.o parallel_phcpack.o mpi2track.o \
                 -o ../bin/mpi2track -lm \
                 --LINK=$(CLINKER)

parallel_pieri:
	gcc -c $(MPILib)/parallel_pieri.c $(MPILib)/parallel_tree.c \
	       $(MPILib)/queue.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2pieri.adb
	gnatbind -n use_c2pieri
	gnatlink -C use_c2pieri parallel_pieri.o parallel_tree.o queue.o \
                 -o $(BIN)/parallel_pieri --LINK=$(CLINKER)

parallel_subsystem:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/witset.c
	gcc -c $(PHCLib)/jump_track.c
	gcc -c $(MPILib)/parallel_subsystem.c
	gcc -c $(MPILib)/job_queue.c
	gcc -c $(MPILib)/idle_queue.c
	gcc -c $(MPILib)/parallel_phcpack.c
	gcc -c $(MPILib)/from_mpi2track.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o witset.o \
                    jump_track.o from_mpi2track.o parallel_phcpack.o \
                    job_queue.o idle_queue.o parallel_subsystem.o -lm \
                 -o ../bin/parallel_subsystem --LINK=$(CLINKER)

mpi2fac:
#	mpicc -c $(MPILib)/mpi2fac.c
	gcc -c $(MPILib)/mpi2fac.c
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc mpi2fac.o -o ../bin/mpi2fac -lm \
                 --LINK=$(CLINKER)

mpi2fac_s:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/witset.c
	gcc -c $(PHCLib)/jump_track.c
	gcc -c $(MPILib)/parallel_phcpack.c
	gcc -c $(MPILib)/parallel_monodromy.c
	gcc -c $(MPILib)/mpi2fac_s.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o witset.o \
                    jump_track.o parallel_phcpack.o parallel_monodromy.o \
                    mpi2fac_s.o -lm \
                 -o ../bin/mpi2fac_s --LINK=$(CLINKER)

mpi2fac_d:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/witset.c
	gcc -c $(PHCLib)/jump_track.c
	gcc -c $(MPILib)/parallel_phcpack.c
	gcc -c $(MPILib)/parallel_monodromy.c
	gcc -c $(MPILib)/manage_components.c
	gcc -c $(MPILib)/mpi2fac_d.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o witset.o \
                    jump_track.o parallel_phcpack.o parallel_monodromy.o \
		    manage_components.o mpi2fac_d.o -lm \
                 -o ../bin/mpi2fac_d --LINK=$(CLINKER)

monodromyMPI:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/witset.c
	gcc -c $(PHCLib)/jump_track.c
	gcc -c $(MPILib)/parallel_phcpack.c
	gcc -c $(MPILib)/parallel_monodromy.c
	gcc -c $(MPILib)/manage_components.c
	gcc -c $(MPILib)/monodromyMPI.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o witset.o \
                    jump_track.o parallel_phcpack.o parallel_monodromy.o \
		    manage_components.o monodromyMPI.o -lm \
                 -o ../bin/monodrom --LINK=$(CLINKER)

mpi2cell_s:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/celcon.c
	gcc -c $(PHCLib)/jump_track.c
	gcc -c $(MPILib)/parallel_phcpack.c
	gcc -c $(MPILib)/parallel_cells.c
	gcc -c $(MPILib)/mpi2cell_s.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o celcon.o \
                    jump_track.o parallel_phcpack.o parallel_cells.o \
                    mpi2cell_s.o \
		-o ../bin/mpi2cell_s --LINK=$(CLINKER)

mpi2cell_d:
	gnatmake -c $(INCLULIBS) $(GNATFLAGS) use_c2phc.adb
	gcc -c $(PHCLib)/phcpack.c
	gcc -c $(PHCLib)/syscon.c
	gcc -c $(PHCLib)/solcon.c
	gcc -c $(PHCLib)/celcon.c
	gcc -c $(PHCLib)/jump_track.c
	gcc -c $(MPILib)/parallel_phcpack.c
	gcc -c $(MPILib)/parallel_cells.c
	gcc -c $(MPILib)/mpi2cell_d.c
	gnatbind -n use_c2phc
	gnatlink -C use_c2phc phcpack.o solcon.o syscon.o celcon.o \
                    jump_track.o parallel_phcpack.o parallel_cells.o \
                    mpi2cell_d.o \
		-o ../bin/mpi2cell_d --LINK=$(CLINKER)

# cleaning up the object files :

clean:
	/bin/rm -f  b* *.o *.ali lib.a
